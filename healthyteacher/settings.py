"""
Django settings for healthyteacher project.

Generated by 'django-admin startproject' using Django 2.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'v1ok*ei72f=+xs6@x)z=!o--d$aq2^f6$!t))mrkp_k$7etgis'

#SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'v1ok*ei72f=+xs6@x)z=!o--d$aq2^f6$!t))mrkp_k$7etgis')

# SECURITY WARNING: don't run with debug turned on in production!

# Testing hosts and variables

PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.MD5PasswordHasher',
]

# DEBUG = True

# ALLOWED_HOSTS = ['localhost', 'healthyteachereb-env-2.us-east-1.elasticbeanstalk.com', '169.254.169.254']

# Production Allowed Hosts and variables

DEBUG = False

ALLOWED_HOSTS = ['www.thehealthyteacher.com']

SECURE_SSL_REDIRECT = True

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')


# Application definition

INSTALLED_APPS = [
    'djangocms_admin_style',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'paypal.standard.ipn',
    'rest_framework',
    'accounts',
    'mainboard',
    'habits',
    'goal',
    'steps',
    'wagtail.contrib.forms',
    'wagtail.contrib.redirects',
    'wagtail.embeds',
    'wagtail.sites',
    'wagtail.users',
    'wagtail.snippets',
    'wagtail.documents',
    'wagtail.images',
    'wagtail.search',
    'wagtail.admin',
    'wagtail.core',
    'modelcluster',
    'taggit',
    'corsheaders',
    'presentationpage',
    'storages',
    'content',
    'workoutgames',
    'sekizai',
    'cms',
    'menus',
    'treebeard',
    'filer',
    'easy_thumbnails',
    'mptt',
    'djangocms_text_ckeditor',
    'djangocms_link',
    'djangocms_file',
    'djangocms_picture',
    'djangocms_video',
    'djangocms_snippet',
    'djangocms_style',
    'djangocmsvideo',
    'navbar',
    'footer',
    'tinymce',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.BrokenLinkEmailsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    #'wagtail.core.middleware.SiteMiddleware',
    'wagtail.contrib.redirects.middleware.RedirectMiddleware',
    'cms.middleware.utils.ApphookReloadMiddleware',
    'cms.middleware.user.CurrentUserMiddleware',
    'cms.middleware.page.CurrentPageMiddleware',
    'cms.middleware.toolbar.ToolbarMiddleware',
    'cms.middleware.language.LanguageCookieMiddleware',
]

ROOT_URLCONF = 'healthyteacher.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.i18n',
                'sekizai.context_processors.sekizai',
                'cms.context_processors.cms_settings',
            ],
        },
    },
]

WSGI_APPLICATION = 'healthyteacher.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

# LOCAL DATABASE

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }

# TESTING DATABASE

# DATABASES = {
#     'default' : {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'ebdb',
#         'USER': 'admindb',
#         'PASSWORD': 'Triscuit1',
#         'HOST': 'aa1w1nmenmg1e4e.ctziirrmcphz.us-east-1.rds.amazonaws.com',
#         'PORT': '3306'
#     }
# }

# # PRODUCTION DATABASE

DATABASES = {
    'default' : {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'ebdb',
        'USER': 'admindb',
        'PASSWORD': 'Triscuit1',
        'HOST': 'healthyteacher4.ctziirrmcphz.us-east-1.rds.amazonaws.com',
        'PORT': '3306'
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# *** OPTIONS FOR DJANGO-CMS ***

LANGUAGE_CODE = 'en'

SITE_ID = 1

X_FRAME_OPTIONS = 'SAMEORIGIN'

LANGUAGES = [
    ('en', 'English'),
]

CMS_TEMPLATES = [
    ('home.html', 'Home page template'),
]

CMS_PERMISSION = True

# Django filer

THUMBNAIL_HIGH_RESOLUTION = True

THUMBNAIL_PROCESSORS = (
    'easy_thumbnails.processors.colorspace',
    'easy_thumbnails.processors.autocrop',
    'filer.thumbnail_processors.scale_and_crop_with_subject_location',
    'easy_thumbnails.processors.filters'
)

# ******************************


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/


TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# CORS Configuration for testing

# CORS_ORIGIN_ALLOW_ALL = True

# CORS_ALLOW_CREDENTIALS = True

# CORS_ORIGIN_WHITELIST = (
#     'http://localhost:3000',
#     'http://localhost:8000',
# )

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/



STATIC_ROOT = ( os.path.join(BASE_DIR, 'static') )

STATIC_URL = '/static/'

#STATICFILES_DIRS = ( os.path.join(BASE_DIR, 'static'), )

# Login

LOGIN_URL = '/accounts'
LOGOUT_REDIRECT_URL = '/'
LOGIN_REDIRECT_URL = '/' 


# mailchimp creds;
MAILCHIMP_API_KEY = "3023bde9604c2f113ebe7650ff29c801"
MAILCHIMP_DATA_CENTER = "us7"
MAILCHIMP_EMAIL_LIST_ID = "f89cbc41f8" 

# EMAIL_BACKEND = "django.core.mail.backends.filebased.EmailBackend"
# EMAIL_FILE_PATH = os.path.join(BASE_DIR, "sent_emails")

EMAIL_BACKEND = 'django_smtp_ssl.SSLEmailBackend'
EMAIL_HOST = 'email-smtp.us-east-1.amazonaws.com'
EMAIL_PORT = 465
EMAIL_HOST_USER = 'AKIAXFG2XINA3KFYO3S6'
EMAIL_HOST_PASSWORD = 'BFGOPdc2zxwQcb/GiXeX63aSxmTJezrzuk3ovz0sFPX5'
EMAIL_USE_TLS = True


AUTH_USER_MODEL = 'accounts.User'

SITE_HOST = "www.thehealthyteacher.com"

DEFAULT_FROM_EMAIL = 'info@thehealthyteacher.com'



#MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
 
MEDIA_URL = '/media/'
 
PAYPAL_RECEIVER_EMAIL = 'lauren@thehealthyteacher.com'
 
PAYPAL_TEST = False


WAGTAIL_SITE_NAME = 'The Healthy Teacher'

WAGTAIL_FRONTEND_LOGIN_URL = '/accounts/login/'

# Test option
# STATICFILES_BUCKETNAME = 'static-media-tht'

# Production option
STATICFILES_BUCKETNAME = 'static-media-tht-test'

AWS_S3_REGION_NAME = 'us-east-1'  # e.g. us-east-2
AWS_ACCESS_KEY_ID = 'AKIAXFG2XINA3IIXTUOY'
AWS_SECRET_ACCESS_KEY = 'isguVAT+j6T9ndRiHz+dK93+sdcKc+yoyAwZEcpu'

# Tell django-storages the domain to use to refer to static files.
STATIC_AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % STATICFILES_BUCKETNAME

# Tell the staticfiles app to use S3Boto3 storage when writing the collected static files (when
# you run `collectstatic`).
STATICFILES_LOCATION = 'static'
STATICFILES_STORAGE = 'custom_storages.StaticStorage'

MEDIAFILES_BUCKETNAME = 'media-tht-test'
MEDIAFILES_LOCATION = 'media'
DEFAULT_FILE_STORAGE = 'custom_storages.MediaStorage'

MEDIA_AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % MEDIAFILES_BUCKETNAME


TINYMCE_JS_ROOT = "tinymce"

TINYMCE_JS_URL = "tinymce/tinymce.min.js"

TINYMCE_DEFAULT_CONFIG = {
    'plugins' : "link",
    'relative_urls': False,
}

SESSION_EXPIRE_AT_BROWSER_CLOSE = True